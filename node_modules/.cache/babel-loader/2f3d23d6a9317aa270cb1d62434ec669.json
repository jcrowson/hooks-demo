{"ast":null,"code":"import _objectSpread from \"/Users/jcrowson/Documents/hooks-demo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/jcrowson/Documents/hooks-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useContext, useState, useEffect } from 'react';\nimport AppContext from './AppContext';\n\nvar useAudioPlayer = function useAudioPlayer() {\n  var _useContext = useContext(AppContext),\n      state = _useContext.state,\n      setState = _useContext.setState;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      progress = _useState2[0],\n      setProgress = _useState2[1];\n\n  useEffect(function () {\n    var progressTimer = setInterval(function () {\n      console.log('1');\n      setProgress(progress + 1);\n    }, 1000);\n  }, [state.isPlaying]);\n\n  var play = function play() {\n    setState(_objectSpread({}, state, {\n      isPlaying: true\n    }));\n  };\n\n  var pause = function pause() {\n    setState(_objectSpread({}, state, {\n      isPlaying: false\n    }));\n  };\n\n  return {\n    isPlaying: state.isPlaying,\n    progress: progress,\n    play: play,\n    pause: pause\n  };\n};\n\nexport default useAudioPlayer;","map":{"version":3,"sources":["/Users/jcrowson/Documents/hooks-demo/src/useAudioPlayer.js"],"names":["useContext","useState","useEffect","AppContext","useAudioPlayer","state","setState","progress","setProgress","progressTimer","setInterval","console","log","isPlaying","play","pause"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,oBACCJ,UAAU,CAACG,UAAD,CADX;AAAA,MACnBE,KADmB,eACnBA,KADmB;AAAA,MACZC,QADY,eACZA,QADY;;AAAA,kBAEKL,QAAQ,CAAC,CAAD,CAFb;AAAA;AAAA,MAEpBM,QAFoB;AAAA,MAEVC,WAFU;;AAI3BN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMO,aAAa,GAAGC,WAAW,CAAC,YAAM;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAJ,MAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACD,KAHgC,EAG9B,IAH8B,CAAjC;AAID,GALQ,EAKN,CAACF,KAAK,CAACQ,SAAP,CALM,CAAT;;AAOA,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBR,IAAAA,QAAQ,mBAAMD,KAAN;AAAaQ,MAAAA,SAAS,EAAE;AAAxB,OAAR;AACD,GAFD;;AAIA,MAAME,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClBT,IAAAA,QAAQ,mBAAMD,KAAN;AAAaQ,MAAAA,SAAS,EAAE;AAAxB,OAAR;AACD,GAFD;;AAIA,SAAO;AACLA,IAAAA,SAAS,EAAER,KAAK,CAACQ,SADZ;AAELN,IAAAA,QAAQ,EAARA,QAFK;AAGLO,IAAAA,IAAI,EAAJA,IAHK;AAILC,IAAAA,KAAK,EAALA;AAJK,GAAP;AAMD,CAzBD;;AA2BA,eAAeX,cAAf","sourcesContent":["import { useContext, useState, useEffect } from 'react';\nimport AppContext from './AppContext';\n\nconst useAudioPlayer = () => {\n  const { state, setState } = useContext(AppContext);\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    const progressTimer = setInterval(() => {\n      console.log('1');\n      setProgress(progress + 1);\n    }, 1000);\n  }, [state.isPlaying]);\n\n  const play = () => {\n    setState({ ...state, isPlaying: true });\n  };\n\n  const pause = () => {\n    setState({ ...state, isPlaying: false });\n  };\n\n  return {\n    isPlaying: state.isPlaying,\n    progress,\n    play,\n    pause,\n  }\n};\n\nexport default useAudioPlayer;\n"]},"metadata":{},"sourceType":"module"}