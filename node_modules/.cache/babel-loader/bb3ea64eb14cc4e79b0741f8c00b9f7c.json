{"ast":null,"code":"import _slicedToArray from \"/Users/jcrowson/Documents/hooks-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jcrowson/Documents/hooks-demo/src/App.js\";\nimport React, { useState } from 'react';\nimport SongList from './SongList';\nimport MusicPlayer from \"./MusicPlayer\";\n\nvar App = function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isPlaying = _useState2[0],\n      setIsPlaying = _useState2[1];\n\n  return React.createElement(PlayingContext.Provider, {\n    value: {\n      value: isPlaying,\n      update: setIsPlaying\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(SongList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(MusicPlayer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/jcrowson/Documents/hooks-demo/src/App.js"],"names":["React","useState","SongList","MusicPlayer","App","isPlaying","setIsPlaying","value","update"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBACkBH,QAAQ,CAAC,KAAD,CAD1B;AAAA;AAAA,MACTI,SADS;AAAA,MACEC,YADF;;AAGhB,SACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAC9BC,MAAAA,KAAK,EAAEF,SADuB;AAE9BG,MAAAA,MAAM,EAAEF;AAFsB,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CAZD;;AAcA,eAAeF,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport SongList from './SongList';\nimport MusicPlayer from \"./MusicPlayer\";\n\n\nconst App = () => {\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  return (\n    <PlayingContext.Provider value={{\n      value: isPlaying,\n      update: setIsPlaying,\n    }}>\n      <SongList />\n      <MusicPlayer/>\n    </PlayingContext.Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}