{"ast":null,"code":"import _slicedToArray from \"/Users/jcrowson/Documents/hooks-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jcrowson/Documents/hooks-demo/src/App.js\";\nimport React, { useState } from 'react';\nimport PlayingContext from './AppContext';\nimport SongList from './SongList';\nimport MusicPlayer from \"./MusicPlayer\";\n\nvar App = function App() {\n  var _useState = useState({\n    isPlaying: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  return React.createElement(PlayingContext.Provider, {\n    value: {\n      state: state,\n      setState: setState\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(SongList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(MusicPlayer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/jcrowson/Documents/hooks-demo/src/App.js"],"names":["React","useState","PlayingContext","SongList","MusicPlayer","App","isPlaying","state","setState"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,cAA3B;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBACUJ,QAAQ,CAAC;AAAEK,IAAAA,SAAS,EAAE;AAAb,GAAD,CADlB;AAAA;AAAA,MACTC,KADS;AAAA,MACFC,QADE;;AAGhB,SACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAC9BD,MAAAA,KAAK,EAALA,KAD8B;AAE9BC,MAAAA,QAAQ,EAARA;AAF8B,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CAZD;;AAcA,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport PlayingContext from './AppContext';\n\nimport SongList from './SongList';\nimport MusicPlayer from \"./MusicPlayer\";\n\nconst App = () => {\n  const [state, setState] = useState({ isPlaying: false });\n\n  return (\n    <PlayingContext.Provider value={{\n      state,\n      setState,\n    }}>\n      <SongList />\n      <MusicPlayer/>\n    </PlayingContext.Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}